

<h2>Events matching your search</h2>

<div >
	<ul class="tabs" data-tabs="tabs"> 		
		<li class="active"><a href="#list">View As List</a></li>
		<li><a href="#map">View As Map</a></li>		
	</ul>	
	<div id="my-tab-content" class="tab-content">
		<div id="list" class="active">
			<div class="search">
	            	<select class="orderBy">
	            		<option value="">Order By...</option>
	            		<option value="Nearest">Nearest First</option>
	            		<option value="Date">Date</option>
	            		<option value="Alpha">A - Z</option>
	            	</select>
	            	
	        </div>   
	                		
			<ul>
				<% @locations.each do | event | %>
				<li>
					<a href="/event/<%= event.id %>"><%= event.title %></a>
					<p><%= event.description %></p>
					<p><%= ((getDistance(@location.lat.to_f, @location.lng.to_f, event.location[1], event.location[0])/1000) *  0.621371192).round(0) %>
					Miles from <%= @search[:postcode]%></o>
				</li>
				<% end %>	
			</ul>
		</div>
			
		<div id="map">
		    <!-- Create map here -->	    
		</div>
	</div>
</div>


<% content_for :sidebar do %>
    <h3>Event Search</h3>
<!-- maps javascript-->

<form action="/event/results/" method="get">
	    <div class="clearfix">
	        <label for="location" title="This is a required field">Location:</label>
	        <input id="location" name="postcode" type="text" value="<%= @search[:postcode] %>">
	    </div>
	    
	    <div class="clearfix">
	        <label for="radius">Distance:</label>
            <select name="radius" id="radius">
                <% DISTANCE.each do |key, value| %>
                    <option value="<%= key %>"
                        <% if @search[:radius].to_s == key.to_s %>
                            selected="selected"
                        <% end %>
                    ><%= value %></option>
                <% end %>
            </select>
	    </div>
	    
	    <div class="clearfix">
	        <label for="searchType">Type:</label>
            <select name="type" id="type">
                <% CATEGORIES.each do |key, value| %>
                    <option value="<%= key %>"
                        <% if @search[:type] == key.to_s %>
                            selected="selected"
                        <% end %>
                    ><%= value %></option>
                <% end %>
            </select>
	    </div>
	    
	    <div class="clearfix">
	        <label for="dateFrom">Date From:</label>
	        <input type="date" id="dateFrom" name="afterDate" value="<%= @search[:afterDate] %>">
	        
	        <label for="dateTo">Date To:</label>
	        <input type="date" id="dateTo" name="beforeDate" value="<%= @search[:beforeDate] %>">
	    </div>
	        
			<input type="submit" value="Search" class="btn primary">
	
	</form>
<% end %>
<% content_for :js_footer do %>
<script src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8.16/jquery-ui.min.js" type="text/javascript"></script>
<script type="text/javascript" src="../../js/Fluster2.js"></script>
<script type="text/javascript" src="../../js/bootstrap.js"></script>
<!--google maps script-->
<script type="text/javascript">  

    var postCode = '<%= @search[:postcode].to_s %>';

    var radius = '<%= @search[:radius].to_s %>';
    
    var latlng = new google.maps.LatLng(51.0, 0);
    
    $(document).ready(function () {
    	$('.tabs').tabs();
		$('.tabs').bind('change', function (e) {
  			e.target// activated tab
  			e.relatedTarget // previous tab
  		});
        geocodePostcode(postCode);   
    });
    
    function geocodePostcode(postcode) {
        var geocoder = new google.maps.Geocoder();

        geocoder.geocode({ 'address': postcode }, function (results, status) {
            if (status == "OK") {
                latlng = results[0].geometry.location;
                var myOptions = {

                    zoom: 10,
                    zoom: 10,
                    center: latlng,
                    mapTypeId: google.maps.MapTypeId.ROADMAP
                };
                //Create Map
                var map = new google.maps.Map(document.getElementById("map"), myOptions);

                var marker, markerset = [];

                //lots of Test data
                var json = [];
                
                <% @locations.each_with_index do |event, i|  %>
                	
					json[<%= i%>] = { 'id': '<%= event.id %> ', 'lng': '<%= event.location[0]%>', 'lat': '<%= event.location[1] %>'}
                	
                <% end %>
                //var json = %= @jsonString%>
               
                for (var i = 0; i < json.length; i++) {
                    marker = newMarker(new google.maps.LatLng(json[i].lat, json[i].lng), json[i].id);
                    markerset.push(marker);
                }
                //for (var i = 0; i < json.length; i++) {
                    //marker = newMarker(new google.maps.LatLng(json[i].lat, json[i].lng), json[i].id);
                    //markerset.push(marker);
                //}
                
                var fluster = new MarkerClusterer(map, markerset);
                //for (var i = 0; i < Model.Count ; i++) {                // 
                // <text>
                // marker = newMarker(new google.maps.LatLng(Model[i].LatLang), "Model[i].EventTitle");
                // fluster.addMarker(marker);
                // </text>       
                // }
                function newMarker(markerLocation, markerTitle) {
                    var marker = new google.maps.Marker({ position: markerLocation, title: 'Marker[' + markerTitle + ']' });
                    var contentString = '<p>Marker[' + markerTitle + '] clicked.</p>'
                    var infowindow = new google.maps.InfoWindow({ content: contentString });
                    google.maps.event.addListener(marker, 'click', function () {
                        infowindow.open(map, marker);
                    });
                    return marker;
                }
                //Add info to position


                //Radius
                var radiusInMeters = radius * 1609.344;
                var radiusCircle;
                var radiusOptions = {
                    strokeColor: "#00ffff",
                    strokeOpacity: 0.8,
                    strokeWeight: 2,
                    fillColor: "#00ffff",
                    fillOpacity: 0.35,
                    map: map,
                    center: latlng,
                    radius: radiusInMeters
                };
                radiusCircle = new google.maps.Circle(radiusOptions);
            }
            else {
                console.log("Unable to geocode location");
            }
        });
    }
</script>  
<% end %>
